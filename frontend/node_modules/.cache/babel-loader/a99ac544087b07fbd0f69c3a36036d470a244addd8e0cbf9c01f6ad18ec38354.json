{"ast":null,"code":"var _jsxFileName = \"/Users/indsingh11/Desktop/react-master-2024/router-practice/frontend/src/Pages/NewEventPage.jsx\";\nimport { json, redirect } from \"react-router-dom\";\nimport EventForm from \"../components/EventForm\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst NewEventPage = () => {\n  console.log('adding a event');\n  return /*#__PURE__*/_jsxDEV(EventForm, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 5,\n    columnNumber: 12\n  }, this);\n};\n_c = NewEventPage;\nexport default NewEventPage;\nexport function action({\n  request,\n  params\n}) {\n  const fData = new request.formData();\n  console.log('in action');\n  let result;\n  for (let [key, value] of fData) {\n    result = {\n      ...result,\n      [key]: value\n    };\n  }\n  async function submitData(event) {\n    console.log('post');\n    const response = await fetch('http://localhost:8080/events', {\n      method: 'POST',\n      body: JSON.stringify(event),\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    });\n    if (!response.ok) {\n      throw json({\n        message: 'not able to post'\n      }, {\n        status: 500\n      });\n    }\n    redirect('/events');\n  }\n  submitData(result);\n}\nvar _c;\n$RefreshReg$(_c, \"NewEventPage\");","map":{"version":3,"names":["json","redirect","EventForm","jsxDEV","_jsxDEV","NewEventPage","console","log","fileName","_jsxFileName","lineNumber","columnNumber","_c","action","request","params","fData","formData","result","key","value","submitData","event","response","fetch","method","body","JSON","stringify","headers","ok","message","status","$RefreshReg$"],"sources":["/Users/indsingh11/Desktop/react-master-2024/router-practice/frontend/src/Pages/NewEventPage.jsx"],"sourcesContent":["import { json, redirect } from \"react-router-dom\"\nimport EventForm from \"../components/EventForm\"\nconst NewEventPage=()=>{\n console.log('adding a event')\n    return <EventForm />\n}\nexport default NewEventPage\n\n\n\nexport function action({request,params}){\n\n    const fData=new request.formData()\nconsole.log('in action')\nlet result;\nfor(let [key,value] of fData ){\nresult={...result,[key]:value}\n}\nasync function submitData(event){\n\nconsole.log('post')\nconst response = await fetch('http://localhost:8080/events',{\nmethod:'POST',\nbody:JSON.stringify(event),\nheaders:{\n    'Content-Type': 'application/json'\n}\n\n})\nif(!response.ok){\n  throw  json({message:'not able to post'},{status:500})\n\n}\nredirect('/events')\n\n}\nsubmitData(result)\n}"],"mappings":";AAAA,SAASA,IAAI,EAAEC,QAAQ,QAAQ,kBAAkB;AACjD,OAAOC,SAAS,MAAM,yBAAyB;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAC/C,MAAMC,YAAY,GAACA,CAAA,KAAI;EACtBC,OAAO,CAACC,GAAG,CAAC,gBAAgB,CAAC;EAC1B,oBAAOH,OAAA,CAACF,SAAS;IAAAM,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAE,CAAC;AACxB,CAAC;AAAAC,EAAA,GAHKP,YAAY;AAIlB,eAAeA,YAAY;AAI3B,OAAO,SAASQ,MAAMA,CAAC;EAACC,OAAO;EAACC;AAAM,CAAC,EAAC;EAEpC,MAAMC,KAAK,GAAC,IAAIF,OAAO,CAACG,QAAQ,CAAC,CAAC;EACtCX,OAAO,CAACC,GAAG,CAAC,WAAW,CAAC;EACxB,IAAIW,MAAM;EACV,KAAI,IAAI,CAACC,GAAG,EAACC,KAAK,CAAC,IAAIJ,KAAK,EAAE;IAC9BE,MAAM,GAAC;MAAC,GAAGA,MAAM;MAAC,CAACC,GAAG,GAAEC;IAAK,CAAC;EAC9B;EACA,eAAeC,UAAUA,CAACC,KAAK,EAAC;IAEhChB,OAAO,CAACC,GAAG,CAAC,MAAM,CAAC;IACnB,MAAMgB,QAAQ,GAAG,MAAMC,KAAK,CAAC,8BAA8B,EAAC;MAC5DC,MAAM,EAAC,MAAM;MACbC,IAAI,EAACC,IAAI,CAACC,SAAS,CAACN,KAAK,CAAC;MAC1BO,OAAO,EAAC;QACJ,cAAc,EAAE;MACpB;IAEA,CAAC,CAAC;IACF,IAAG,CAACN,QAAQ,CAACO,EAAE,EAAC;MACd,MAAO9B,IAAI,CAAC;QAAC+B,OAAO,EAAC;MAAkB,CAAC,EAAC;QAACC,MAAM,EAAC;MAAG,CAAC,CAAC;IAExD;IACA/B,QAAQ,CAAC,SAAS,CAAC;EAEnB;EACAoB,UAAU,CAACH,MAAM,CAAC;AAClB;AAAC,IAAAN,EAAA;AAAAqB,YAAA,CAAArB,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}