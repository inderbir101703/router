{"ast":null,"code":"var _jsxFileName = \"/Users/indsingh11/Desktop/react-master-2024/router-practice/frontend/src/Pages/EditEventPage.jsx\",\n  _s = $RefreshSig$();\nimport { useRouteError, useRouteLoaderData } from \"react-router-dom\";\nimport EventForm from \"../components/EventForm\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst EditEventPage = () => {\n  _s();\n  const event = useRouteLoaderData('event-detail');\n  console.log(event.event, 'inside edit');\n  return /*#__PURE__*/_jsxDEV(EventForm, {\n    event: event.event\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 7,\n    columnNumber: 12\n  }, this);\n};\n_s(EditEventPage, \"X1tKbLClSO07u2RBpksvOHS2Fwk=\", false, function () {\n  return [useRouteLoaderData];\n});\n_c = EditEventPage;\nexport default EditEventPage;\nvar _c;\n$RefreshReg$(_c, \"EditEventPage\");","map":{"version":3,"names":["useRouteError","useRouteLoaderData","EventForm","jsxDEV","_jsxDEV","EditEventPage","_s","event","console","log","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/indsingh11/Desktop/react-master-2024/router-practice/frontend/src/Pages/EditEventPage.jsx"],"sourcesContent":["import { useRouteError, useRouteLoaderData } from \"react-router-dom\"\nimport EventForm from \"../components/EventForm\"\n\nconst EditEventPage=()=>{\n    const event=useRouteLoaderData('event-detail')\n    console.log(event.event,'inside edit')\n    return <EventForm event={event.event}/>\n}\nexport default EditEventPage"],"mappings":";;AAAA,SAASA,aAAa,EAAEC,kBAAkB,QAAQ,kBAAkB;AACpE,OAAOC,SAAS,MAAM,yBAAyB;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAE/C,MAAMC,aAAa,GAACA,CAAA,KAAI;EAAAC,EAAA;EACpB,MAAMC,KAAK,GAACN,kBAAkB,CAAC,cAAc,CAAC;EAC9CO,OAAO,CAACC,GAAG,CAACF,KAAK,CAACA,KAAK,EAAC,aAAa,CAAC;EACtC,oBAAOH,OAAA,CAACF,SAAS;IAACK,KAAK,EAAEA,KAAK,CAACA;EAAM;IAAAG,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAC,CAAC;AAC3C,CAAC;AAAAP,EAAA,CAJKD,aAAa;EAAA,QACHJ,kBAAkB;AAAA;AAAAa,EAAA,GAD5BT,aAAa;AAKnB,eAAeA,aAAa;AAAA,IAAAS,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}