{"ast":null,"code":"var _jsxFileName = \"/Users/indsingh11/Desktop/react-master-2024/router-practice/frontend/src/Pages/NewEventPage.jsx\";\nimport { json, redirect } from \"react-router-dom\";\nimport EventForm from \"../components/EventForm\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst NewEventPage = () => {\n  console.log('adding a event');\n  return /*#__PURE__*/_jsxDEV(EventForm, {\n    method: \"POST\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 5,\n    columnNumber: 12\n  }, this);\n};\n_c = NewEventPage;\nexport default NewEventPage;\nexport async function action({\n  request,\n  params\n}) {\n  console.log('in action');\n  const fData = await request.formData();\n  console.log('in action');\n  let result;\n  for (let [key, value] of fData) {\n    result = {\n      ...result,\n      [key]: value\n    };\n  }\n  const response = await fetch('http://localhost:8080/events', {\n    method: 'POST',\n    body: JSON.stringify(result),\n    headers: {\n      'Content-Type': 'application/json'\n    }\n  });\n  if (!response.ok) {\n    throw json({\n      message: 'not able to post'\n    }, {\n      status: 500\n    });\n  }\n  return redirect('');\n}\nvar _c;\n$RefreshReg$(_c, \"NewEventPage\");","map":{"version":3,"names":["json","redirect","EventForm","jsxDEV","_jsxDEV","NewEventPage","console","log","method","fileName","_jsxFileName","lineNumber","columnNumber","_c","action","request","params","fData","formData","result","key","value","response","fetch","body","JSON","stringify","headers","ok","message","status","$RefreshReg$"],"sources":["/Users/indsingh11/Desktop/react-master-2024/router-practice/frontend/src/Pages/NewEventPage.jsx"],"sourcesContent":["import { json, redirect } from \"react-router-dom\"\nimport EventForm from \"../components/EventForm\"\nconst NewEventPage=()=>{\n console.log('adding a event')\n    return <EventForm  method='POST'/>\n}\nexport default NewEventPage\n\n\n\nexport async function action({request,params}){\n    console.log('in action')\n    const fData=await  request.formData()\nconsole.log('in action')\nlet result;\nfor(let [key,value] of fData ){\nresult={...result,[key]:value}\n}\n\n\nconst response = await fetch('http://localhost:8080/events',{\nmethod:'POST',\nbody:JSON.stringify(result),\nheaders:{\n    'Content-Type': 'application/json'\n}\n\n})\nif(!response.ok){\n  throw  json({message:'not able to post'},{status:500})\n\n}\nreturn redirect('')\n\n\n}"],"mappings":";AAAA,SAASA,IAAI,EAAEC,QAAQ,QAAQ,kBAAkB;AACjD,OAAOC,SAAS,MAAM,yBAAyB;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAC/C,MAAMC,YAAY,GAACA,CAAA,KAAI;EACtBC,OAAO,CAACC,GAAG,CAAC,gBAAgB,CAAC;EAC1B,oBAAOH,OAAA,CAACF,SAAS;IAAEM,MAAM,EAAC;EAAM;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAC,CAAC;AACtC,CAAC;AAAAC,EAAA,GAHKR,YAAY;AAIlB,eAAeA,YAAY;AAI3B,OAAO,eAAeS,MAAMA,CAAC;EAACC,OAAO;EAACC;AAAM,CAAC,EAAC;EAC1CV,OAAO,CAACC,GAAG,CAAC,WAAW,CAAC;EACxB,MAAMU,KAAK,GAAC,MAAOF,OAAO,CAACG,QAAQ,CAAC,CAAC;EACzCZ,OAAO,CAACC,GAAG,CAAC,WAAW,CAAC;EACxB,IAAIY,MAAM;EACV,KAAI,IAAI,CAACC,GAAG,EAACC,KAAK,CAAC,IAAIJ,KAAK,EAAE;IAC9BE,MAAM,GAAC;MAAC,GAAGA,MAAM;MAAC,CAACC,GAAG,GAAEC;IAAK,CAAC;EAC9B;EAGA,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,8BAA8B,EAAC;IAC5Df,MAAM,EAAC,MAAM;IACbgB,IAAI,EAACC,IAAI,CAACC,SAAS,CAACP,MAAM,CAAC;IAC3BQ,OAAO,EAAC;MACJ,cAAc,EAAE;IACpB;EAEA,CAAC,CAAC;EACF,IAAG,CAACL,QAAQ,CAACM,EAAE,EAAC;IACd,MAAO5B,IAAI,CAAC;MAAC6B,OAAO,EAAC;IAAkB,CAAC,EAAC;MAACC,MAAM,EAAC;IAAG,CAAC,CAAC;EAExD;EACA,OAAO7B,QAAQ,CAAC,EAAE,CAAC;AAGnB;AAAC,IAAAY,EAAA;AAAAkB,YAAA,CAAAlB,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}